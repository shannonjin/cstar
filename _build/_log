### Starting build.
# Target: compiler.ml.depends, tags: { extension:ml, file:compiler.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules compiler.ml > compiler.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o ast.cmo ast.ml # cached
# Target: codegen.ml.depends, tags: { extension:ml, file:codegen.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules codegen.ml > codegen.ml.depends # cached
# Target: parser.mly, tags: { extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet }
/Users/shannon/.opam/4.13.1/bin/ocamlyacc parser.mly
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules parser.mli > parser.mli.depends
# Target: scanner.mll, tags: { extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, quiet }
/Users/shannon/.opam/4.13.1/bin/ocamllex.opt -q scanner.mll
# Target: scanner.ml.depends, tags: { extension:ml, file:scanner.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules scanner.ml > scanner.ml.depends
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o parser.cmi parser.mli
# Target: codegen.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:codegen.cmo, file:codegen.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o codegen.cmo codegen.ml
+ ocamlfind ocamlc -c -o codegen.cmo codegen.ml
File "codegen.ml", line 1, characters 12-16:
1 |  module L = Llvm
                ^^^^
Error: Unbound module Llvm
Command exited with code 2.
# Compilation unsuccessful.
